1
00:00:00,000 --> 00:00:04,000
Cum scrii HTML atributuri folosind PUG

2
00:00:04,000 --> 00:00:05,500
 

3
00:00:05,500 --> 00:00:12,000
Last time if you remember, we created from our simple setup a more advanced one, a more convenient one

4
00:00:12,000 --> 00:00:16,000
So let's get back to it. I'll open the console.

5
00:00:16,000 --> 00:00:20,266
If you haven't closed the process, well, you don't have to do anything, otherwise

6
00:00:20,266 --> 00:00:24,000
You'll have to do: npm start

7
00:00:24,000 --> 00:00:28,000
And basically this will watch for changes

8
00:00:28,000 --> 00:00:31,366
in PUG as well as open a browser

9
00:00:31,366 --> 00:00:36,000
We are not that interested right now in the browser, let's just see how

10
00:00:36,000 --> 00:00:40,000
We can write HTML attributes in PUG

11
00:00:40,000 --> 00:00:44,000
So in this "src" I'll create a new folder

12
00:00:44,000 --> 00:00:48,000
And I'll call it

13
00:00:48,000 --> 00:00:51,633
attributes

14
00:00:51,633 --> 00:00:56,000
And in here I'll create a new file, attributes as well

15
00:00:56,000 --> 00:01:00,000
attributes.pug

16
00:01:00,000 --> 00:01:07,033
Ok, and over here I'll just say: div test

17
00:01:07,033 --> 00:01:12,000
And basically, if I go into "tmp", into attributes

18
00:01:12,000 --> 00:01:16,000
I'll see this attributes.html file, let's split it

19
00:01:16,000 --> 00:01:20,000
And then close that explorer

20
00:01:20,000 --> 00:01:24,000
And we can see that this "div test" gets converted into this one over here

21
00:01:24,000 --> 00:01:29,166
So let's see another example, let's create an "a" tag

22
00:01:29,166 --> 00:01:32,366
In order to do attributes we want to open parentheses

23
00:01:32,366 --> 00:01:36,000
And let's do "href"

24
00:01:36,000 --> 00:01:44,000
=https://google.com

25
00:01:44,000 --> 00:01:53,900
And that's like that. Give me a second, let's split this horizontally

26
00:01:53,900 --> 00:02:00,000
Ok, so ... but those ones are one after the other

27
00:02:00,000 --> 00:02:03,100
Let's try with a pipe here, 

28
00:02:03,100 --> 00:02:08,000
What happen? Maybe another one?

29
00:02:08,000 --> 00:02:12,000
Two pipes, yeah. So, with two pipes we can make them

30
00:02:12,000 --> 00:02:19,500
On new lines. Ok, let's see some other ones.

31
00:02:19,500 --> 00:02:23,266
Let's do an "img" tag, so if we just save it

32
00:02:23,266 --> 00:02:28,000
It gets converted into that, and ...

33
00:02:28,000 --> 00:02:40,000
We'll do src=my-pictute.jpg

34
00:02:40,000 --> 00:02:47,166
Save it. We can also use commas or spaces

35
00:02:47,166 --> 00:02:52,366
And we'll do width="100"

36
00:02:52,366 --> 00:02:58,900
Then height, let's do 50

37
00:02:58,900 --> 00:03:03,533
So it's pretty similar to HTML, this img tag gets converted in

38
00:03:03,533 --> 00:03:08,100
Into this one, so it pre-fills the lesser sign <, the greater sign >

39
00:03:08,100 --> 00:03:10,166
And it also closes it.

40
00:03:10,166 --> 00:03:16,000
And then in the round parentheses that are here, let me quickly do some drawings

41
00:03:16,000 --> 00:03:26,166
So those parentheses and whatever is inside it

42
00:03:26,166 --> 00:03:31,633
Those attributes will be printed in here

43
00:03:31,633 --> 00:03:40,733
So now this is how I do attributes with PUG, let me also show you

44
00:03:40,733 --> 00:03:48,000
Another example. I'll open this one over here and I'll do a new file

45
00:03:48,000 --> 00:03:55,666
multiline-attributes.pug

46
00:03:55,666 --> 00:04:00,000
So if I save it we can see that into "tmp"

47
00:04:00,000 --> 00:04:04,000
multiline-attributes.html has been generated

48
00:04:04,000 --> 00:04:07,333
Now I'll keep the pug on top and the html on the bottom

49
00:04:07,333 --> 00:04:12,633
So let's say you have a meta tag, right? And ...

50
00:04:12,633 --> 00:04:16,000
the name is "description"

51
00:04:16,000 --> 00:04:24,733
You can see it being generated over here, and then the content is

52
00:04:24,733 --> 00:04:36,000
Pug is an awesome template language for HTML

53
00:04:36,000 --> 00:04:40,000
So you can see that this line gets longer over here and not that easy

54
00:04:40,000 --> 00:04:44,000
For you to navigate, it's not that easy to read, it's just for

55
00:04:44,000 --> 00:04:49,766
For the coders, the browsers and the search engines don't really care about it

56
00:04:49,766 --> 00:04:54,766
So it's just for you while you develop. So another way would be to do multiline attributes

57
00:04:54,766 --> 00:05:00,000
I'll just press Enter here, and I'll also press Enter here

58
00:05:00,000 --> 00:05:03,633
And "Shift + Tab". Now if you look at it

59
00:05:03,633 --> 00:05:07,666
It's exactly the same thing however it's easier

60
00:05:07,666 --> 00:05:12,600
For your eyes to read. So this is how you do attributes

61
00:05:12,600 --> 00:05:15,600
You open and you close round parentheses

62
00:05:15,600 --> 00:05:18,833
And inside them you just do attributes like in HTML

63
00:05:18,833 --> 00:05:22,066
And this is how you do multiline attributes

64
00:05:22,066 --> 00:05:26,799
With that said I'll see you in the next lesson where we'll talk more about attributes in PUG.

